{"ast":null,"code":"import React, { useContext } from \"react\";\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { AuthContext } from \"../provider/AuthProvider\";\nimport 'dotenv/config';\nimport { REACT_APP_FIREBASE_API_KEY, REACT_APP_FIREBASE_APP_ID, REACT_APP_FIREBASE_AUTH_DOMAIN, REACT_APP_FIREBASE_MESSAGING_SENDER_ID, REACT_APP_FIREBASE_STORAGE_BUCKET } from 'react-native-dotenv';\nimport Home from \"../screens/Home\";\nimport SecondScreen from \"../screens/SecondScreen\";\nimport Login from \"../screens/auth/Login\";\nimport Register from \"../screens/auth/Register\";\nimport ForgetPassword from \"../screens/auth/ForgetPassword\";\nimport TabNavigation from \"./TabNavigation\";\nimport Loading from \"../screens/utils/Loading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBEt6mmD6o-fy_tJf_X55fyv1QXjyGJd0g\",\n  authDomain: \"test33-ad7e4.firebaseapp.com\",\n  projectId: \"test33-ad7e4\",\n  storageBucket: \"test33-ad7e4.appspot.com\",\n  messagingSenderId: \"951130383733\",\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: \"G-26BMP2SC9V\"\n};\n\nif (getApps().length === 0) {\n  initializeApp(firebaseConfig);\n}\n\nvar AuthStack = createNativeStackNavigator();\n\nvar Auth = function Auth() {\n  return _jsxs(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(AuthStack.Screen, {\n      name: \"Login\",\n      component: Login\n    }), _jsx(AuthStack.Screen, {\n      name: \"Register\",\n      component: Register\n    }), _jsx(AuthStack.Screen, {\n      name: \"ForgetPassword\",\n      component: ForgetPassword\n    })]\n  });\n};\n\nvar MainStack = createNativeStackNavigator();\n\nvar Main = function Main() {\n  return _jsxs(MainStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(MainStack.Screen, {\n      name: \"TabNavigation\",\n      component: TabNavigation,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(MainStack.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(MainStack.Screen, {\n      name: \"SecondScreen\",\n      component: SecondScreen\n    })]\n  });\n};\n\nexport default (function () {\n  var auth = useContext(AuthContext);\n  var user = auth.user;\n  return _jsxs(NavigationContainer, {\n    children: [user == null && _jsx(Loading, {}), user == false && _jsx(Auth, {}), user == true && _jsx(Main, {})]\n  });\n});","map":{"version":3,"names":["React","useContext","initializeApp","getApps","NavigationContainer","createNativeStackNavigator","AuthContext","REACT_APP_FIREBASE_API_KEY","REACT_APP_FIREBASE_APP_ID","REACT_APP_FIREBASE_AUTH_DOMAIN","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","REACT_APP_FIREBASE_STORAGE_BUCKET","Home","SecondScreen","Login","Register","ForgetPassword","TabNavigation","Loading","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","process","env","measurementId","length","AuthStack","Auth","headerShown","MainStack","Main","auth","user"],"sources":["C:/Users/MM/OneDrive/Desktop/Project/enkun/mobile/project/react-native-expo-template/template-with-firebase-auth-flow/src/navigation/AppNavigator.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { initializeApp, getApps } from \"firebase/app\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { AuthContext } from \"../provider/AuthProvider\";\r\nimport 'dotenv/config' \r\nimport { REACT_APP_FIREBASE_API_KEY, REACT_APP_FIREBASE_APP_ID,\r\nREACT_APP_FIREBASE_AUTH_DOMAIN, REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n REACT_APP_FIREBASE_STORAGE_BUCKET} from 'react-native-dotenv'\r\n// Main\r\nimport Home from \"../screens/Home\";\r\nimport SecondScreen from \"../screens/SecondScreen\";\r\n\r\n// Auth screens\r\nimport Login from \"../screens/auth/Login\";\r\nimport Register from \"../screens/auth/Register\";\r\nimport ForgetPassword from \"../screens/auth/ForgetPassword\";\r\nimport TabNavigation from './TabNavigation';\r\n\r\n\r\nimport Loading from \"../screens/utils/Loading\";\r\n\r\n// Better put your these secret keys in .env file\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBEt6mmD6o-fy_tJf_X55fyv1QXjyGJd0g\",\r\n  authDomain: \"test33-ad7e4.firebaseapp.com\",\r\n  projectId: \"test33-ad7e4\",\r\n  storageBucket: \"test33-ad7e4.appspot.com\",\r\n  messagingSenderId: \"951130383733\",\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: \"G-26BMP2SC9V\"\r\n};\r\n\r\nif (getApps().length === 0) {\r\n  initializeApp(firebaseConfig);\r\n}\r\n\r\nconst AuthStack = createNativeStackNavigator();\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <AuthStack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <AuthStack.Screen name=\"Login\" component={Login} />\r\n      <AuthStack.Screen name=\"Register\" component={Register} />\r\n      <AuthStack.Screen name=\"ForgetPassword\" component={ForgetPassword} />\r\n    </AuthStack.Navigator>\r\n  );\r\n};\r\n\r\nconst MainStack = createNativeStackNavigator();\r\n\r\nconst Main = () => {\r\n  return (\r\n    <MainStack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <MainStack.Screen\r\n        name=\"TabNavigation\"\r\n        component={TabNavigation}\r\n        options={{\r\n          headerShown: false\r\n        }}\r\n      />\r\n      <MainStack.Screen name=\"Home\" component={Home} />\r\n      <MainStack.Screen name=\"SecondScreen\" component={SecondScreen} />\r\n    </MainStack.Navigator>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const auth = useContext(AuthContext);\r\n  const user = auth.user;\r\n  return (\r\n    <NavigationContainer>\r\n      {user == null && <Loading />}\r\n      {user == false && <Auth />}\r\n      {user == true && <Main />}\r\n    </NavigationContainer>\r\n  );\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,cAAvC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,WAAT;AACA,OAAO,eAAP;AACA,SAASC,0BAAT,EAAqCC,yBAArC,EACAC,8BADA,EACgCC,sCADhC,EAECC,iCAFD,QAEyC,qBAFzC;AAIA,OAAOC,IAAP;AACA,OAAOC,YAAP;AAGA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AAGA,OAAOC,OAAP;;;AAGA,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,8BAFS;EAGrBC,SAAS,EAAE,cAHU;EAIrBC,aAAa,EAAE,0BAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYnB,yBANE;EAOrBoB,aAAa,EAAE;AAPM,CAAvB;;AAUA,IAAIzB,OAAO,GAAG0B,MAAV,KAAqB,CAAzB,EAA4B;EAC1B3B,aAAa,CAACiB,cAAD,CAAb;AACD;;AAED,IAAMW,SAAS,GAAGzB,0BAA0B,EAA5C;;AAEA,IAAM0B,IAAI,GAAG,SAAPA,IAAO,GAAM;EACjB,OACE,MAAC,SAAD,CAAW,SAAX;IACE,aAAa,EAAE;MACbC,WAAW,EAAE;IADA,CADjB;IAAA,WAKE,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,OAAvB;MAA+B,SAAS,EAAElB;IAA1C,EALF,EAME,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,UAAvB;MAAkC,SAAS,EAAEC;IAA7C,EANF,EAOE,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,gBAAvB;MAAwC,SAAS,EAAEC;IAAnD,EAPF;EAAA,EADF;AAWD,CAZD;;AAcA,IAAMiB,SAAS,GAAG5B,0BAA0B,EAA5C;;AAEA,IAAM6B,IAAI,GAAG,SAAPA,IAAO,GAAM;EACjB,OACE,MAAC,SAAD,CAAW,SAAX;IACE,aAAa,EAAE;MACbF,WAAW,EAAE;IADA,CADjB;IAAA,WAKE,KAAC,SAAD,CAAW,MAAX;MACE,IAAI,EAAC,eADP;MAEE,SAAS,EAAEf,aAFb;MAGE,OAAO,EAAE;QACPe,WAAW,EAAE;MADN;IAHX,EALF,EAYE,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,MAAvB;MAA8B,SAAS,EAAEpB;IAAzC,EAZF,EAaE,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,cAAvB;MAAsC,SAAS,EAAEC;IAAjD,EAbF;EAAA,EADF;AAiBD,CAlBD;;AAoBA,gBAAe,YAAM;EACnB,IAAMsB,IAAI,GAAGlC,UAAU,CAACK,WAAD,CAAvB;EACA,IAAM8B,IAAI,GAAGD,IAAI,CAACC,IAAlB;EACA,OACE,MAAC,mBAAD;IAAA,WACGA,IAAI,IAAI,IAAR,IAAgB,KAAC,OAAD,KADnB,EAEGA,IAAI,IAAI,KAAR,IAAiB,KAAC,IAAD,KAFpB,EAGGA,IAAI,IAAI,IAAR,IAAgB,KAAC,IAAD,KAHnB;EAAA,EADF;AAOD,CAVD"},"metadata":{},"sourceType":"module"}